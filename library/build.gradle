plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'de.mannodermaus.android-junit5'
    id 'jacoco'
    id 'org.jetbrains.dokka' version '0.10.1' apply false
    id 'xyz.tynn.android.kdoc' version '0.1.0'
    id 'xyz.tynn.android.sources' version '0.1.2'
    id 'maven-publish'
    id 'com.jfrog.bintray'
}

group = 'com.patloew.colocation'
version = '1.0.0'
project.archivesBaseName = 'colocation'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules-consumer.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api 'com.google.android.gms:play-services-location:17.1.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.3.9"

    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.2"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.9'

}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest'])

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                artifactId = 'colocation'
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug
                artifactId = 'colocation-debug'
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    publications = ['release']
    pkg {
        repo = "maven"
        name = "CoLocation"
        websiteUrl = "https://github.com/patloew/CoLocation"
        vcsUrl = "https://github.com/patloew/CoLocation.git"
        licenses = ["Apache-2.0"]
        publish = true
        version {
            name = "1.0.0"
        }
    }
}
